# yaml-language-server: $schema=../../../res/schema/lang.json
languages:
  python:
    match: ['\.py$']
    fmt:
      type: cli
      exec:
        bin: black
        start: ["--quiet"]
      img: "ghcr.io/tyhal/crie-dep-pip:latest"
    chk:
      exec:
        bin: pylint
      type: cli
      img: "ghcr.io/tyhal/crie-dep-pip:latest"
  proto:
    match: ['\.proto$']
    fmt:
      exec:
        bin: protolint
      type: cli
      img: "ghcr.io/tyhal/crie-dep-go:latest"
    chk:
      exec:
        bin: protolint
      type: cli
      img: "ghcr.io/tyhal/crie-dep-go:latest"
  bash:
    match: ['\.bash$']
    fmt:
      type: shfmt
      language: bash
    chk:
      type: cli
      exec:
        bin: shellcheck
        start: ["-x", "--shell=bash", "-Calways"]
      img: "docker.io/koalaman/shellcheck-alpine:stable"
  sh:
    match: ['\.sh$', '/script/[^.]*$', '^script/[^.]*$']
    fmt:
      type: shfmt
      language: posix
    chk:
      type: cli
      exec:
        bin: shellcheck
        start: ["-x", "--shell=sh", "-Calways"]
      img: "docker.io/koalaman/shellcheck-alpine:stable"
  docker:
    match: ['Dockerfile$']
    chk:
      type: cli
      exec:
        bin: hadolint
        start: ["--ignore", "DL3007", "--ignore", "DL3018", "--ignore", "DL3016", "--ignore", "DL4006"]
      img: "docker.io/hadolint/hadolint:latest-alpine"
  yml:
    match: ['\.yml$', '\.yaml$']
    chk:
      exec:
        bin: yamllint
      type: cli
      img: "ghcr.io/tyhal/crie-dep-pip:latest"
    fmt:
      type: cli
      exec:
        bin: yamlfmt
      img: "ghcr.io/google/yamlfmt:latest"
  terraform:
    match: ['\.tf$']
    fmt:
      type: cli
      exec:
        bin: terraform
        start: ["fmt"]
      img: "docker.io/hashicorp/terraform:1.3.5"
    chk:
      type: cli
      exec:
        bin: tflint
        start: ["--filter"]
        chdir: true
      img: "ghcr.io/terraform-linters/tflint"
  javascript:
    match: ['\.js$', '\.jsx$']
    fmt:
      type: cli
      exec:
        bin: standard
        start: ["--fix"]
      img: "ghcr.io/tyhal/crie-dep-npm:latest"
    chk:
      type: cli
      exec:
        bin: standard
      img: "ghcr.io/tyhal/crie-dep-npm:latest"
  golang:
    match: ['\.go$']
    fmt:
      type: cli
      exec:
        bin: gofmt
        start: ["-l", "-w"]
      img: "ghcr.io/tyhal/crie-dep-go:latest"
    chk:
      type: cli
      exec:
        bin: golint
        start: ["-set_exit_status"]
      img: "ghcr.io/tyhal/crie-dep-go:latest"
  markdown:
    match: ['\.md$']
    fmt:
      type: cli
      exec:
        bin: remark
        start: ["--use", "remark-preset-lint-recommended"]
        end: ["-o"]
      img: "ghcr.io/tyhal/crie-dep-npm:latest"
    chk:
      type: cli
      exec:
        bin: vale
        start: ["--config=/etc/vale/.vale.ini"]
      img: "ghcr.io/tyhal/crie-dep-go:latest"
  asciidoctor:
    match: ['\.adoc$']
    chk:
      type: cli
      exec:
        bin: vale
        start: ["--config=/etc/vale/.vale.ini"]
      img: "ghcr.io/tyhal/crie-dep-go:latest"
  json:
    match: ['\.json$', '\.JSON$']
    fmt:
      type: cli
      exec:
        bin: jsonlint
        start: ["-i", "-s", "-c", "-q"]
      img: "ghcr.io/tyhal/crie-dep-npm:latest"
    chk:
      type: cli
      exec:
        bin: jsonlint
        start: ["-q"]
      img: "ghcr.io/tyhal/crie-dep-npm:latest"
  cpp:
    match: ['\.cc$', '\.cpp$']
    fmt:
      type: cli
      exec:
        bin: clang-format
        start: ["-style=file", "-i"]
      img: "ghcr.io/tyhal/crie-dep-apk:latest"
    chk:
      type: cli
      exec:
        bin: cppcheck
        start: ["--enable=all", "--language=c++", "--suppress=operatorEqRetRefThis", "--suppress=operatorEq", "--suppress=noExplicitConstructor", "--suppress=unRegexedSuppression", "--suppress=missingInclude", "--suppress=unusedFunction", "--suppress=noConstructor", "--suppress=unmatchedSuppression", "--suppress=missingIncludeSystem", "--inline-suppr", "--error-exitcode=1"]
      img: "ghcr.io/tyhal/crie-dep-apk:latest"
  cppheaders:
    match: ['\.h$', '\.hpp$']
    fmt:
      type: cli
      exec:
        bin: clang-format
        start: ["-style=file", "-i"]
      img: "ghcr.io/tyhal/crie-dep-apk:latest"
  c:
    match: ['\.c$']
    fmt:
      type: cli
      exec:
        bin: clang-format
        start: ["-style=file", "-i"]
      img: "ghcr.io/tyhal/crie-dep-apk:latest"
    chk:
      type: cli
      exec:
        bin: cppcheck
        start: ["--enable=all", "--language=c", "--suppress=unRegexedSuppression", "--suppress=missingInclude", "--suppress=unusedFunction", "--suppress=unmatchedSuppression", "--suppress=missingIncludeSystem", "--inline-suppr", "--error-exitcode=1"]
      img: "ghcr.io/tyhal/crie-dep-apk:latest"
  cmake:
    match: ['CMakeLists.txt$', '\.cmake$']
    chk:
      type: cli
      exec:
        bin: cmakelint
        start: ["--config=/home/standards/.config/cmakelintrc"]
      img: "ghcr.io/tyhal/crie-dep-pip:latest"
