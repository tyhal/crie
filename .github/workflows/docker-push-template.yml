name: docker-push-template
on:
  workflow_call:
    inputs:
      img:
        required: true
        type: string
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true

jobs:
  push-dockerhub:
    runs-on: ${{ matrix.runner }}
    if: github.event_name == 'push'

    strategy:
      matrix:
        runner: [ubuntu-latest, ubuntu-24.04-arm]

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: set environ
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Publish ${{ inputs.img }}
        id: docker_push
        uses: docker/build-push-action@v6
        with:
          context: ./img/${{ inputs.img }}
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/crie-dep-${{ inputs.img }}:${{ env.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

